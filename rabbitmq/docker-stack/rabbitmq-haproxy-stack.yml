version: "3.9"
services:
  rabbit1:
    image: rabbitmq:3.12-management
    hostname: rabbit1
    healthcheck:
      test: curl -s https://localhost:15672 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      RABBITMQ_ERLANG_COOKIE: "rabbitmq-cluster-cookie"
      RABBITMQ_NODENAME: rabbit1
    deploy:
      replicas: 1
      placement:
        constraints:
          - 'node.hostname == vm-ubuntu-11'
    volumes:
      - /docker/rabbitmq/data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    configs:
      - source: rabbitmq_conf
        target: /etc/rabbitmq/rabbitmq.conf
    networks:
      - rabbitmq-cluster

  rabbit2:
    image: rabbitmq:3.12-management
    hostname: rabbit2
    healthcheck:
      test: curl -s https://localhost:15672 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      RABBITMQ_ERLANG_COOKIE: "rabbitmq-cluster-cookie"
      RABBITMQ_NODENAME: rabbit2
    deploy:
      replicas: 1
      placement:
        constraints:
          - 'node.hostname == vm-ubuntu-12'
    volumes:
      - /docker/rabbitmq/data:/var/lib/rabbitmq
    # command:
    #   - /bin/sh
    #   - -c
    #   - |
    #     sleep 30
    #     /opt/rabbitmq/sbin/rabbitmqctl stop_app
    #     /opt/rabbitmq/sbin/rabbitmqctl reset
    #     /opt/rabbitmq/sbin/rabbitmqctl join_cluster rabbit1@rabbit1
    #     /opt/rabbitmq/sbin/rabbitmqctl start_app
    #
    configs:
      - source: rabbitmq_conf
        target: /etc/rabbitmq/rabbitmq.conf
    networks:
      - rabbitmq-cluster

  rabbit3:
    image: rabbitmq:3.12-management
    hostname: rabbit3
    healthcheck:
      test: curl -s https://localhost:15672 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      RABBITMQ_ERLANG_COOKIE: "rabbitmq-cluster-cookie"
      RABBITMQ_NODENAME: rabbit3
    deploy:
      replicas: 1
      placement:
        constraints:
          - 'node.hostname == vm-ubuntu-13'
    volumes:
      - /docker/rabbitmq/data:/var/lib/rabbitmq
    configs:
      - source: rabbitmq_conf
        target: /etc/rabbitmq/rabbitmq.conf
    networks:
      - rabbitmq-cluster


  haproxy:
    image: haproxy
    hostname: haproxy
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 1m
      restart_policy:
        condition: on-failure
    environment:
      TZ: "Asia/Shanghai"
    ports:
      - "35671:35671" # RabbitMQ load balance AMQP port
      - "35672:35672" # RabbitMQ management ui http port
      - "35673:35673" # HAProxy stats http port
    configs:
      - source: haproxy_cfg
        target: /usr/local/etc/haproxy/haproxy.cfg
    networks:
      - rabbitmq-cluster
    depends_on:
      - rabbit1
      - rabbit2
      - rabbit3


configs:
  rabbitmq_conf:
    file: ./conf/rabbitmq.conf
  haproxy_cfg:
    file: ./conf/haproxy.cfg

networks:
  rabbitmq-cluster:
    driver: overlay